"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var Data_1 = require("../../../shared/Data");
var Server_1 = require("../../../shared/Server/Server");
var imagepicker = require("nativescript-imagepicker");
var http = require("http");
var layout = require("ui/layouts/grid-layout");
var firebase = require("nativescript-plugin-firebase");
var ProfileComponent = /** @class */ (function () {
    function ProfileComponent(router, data, _changeDetectionRef) {
        this.router = router;
        this.data = data;
        this._changeDetectionRef = _changeDetectionRef;
        this.site = "http://188.166.127.207:5555/api.php/";
        this.firstName = this.data.storage["firstName"];
        this.lastName = this.data.storage["lastName"];
        this.id = this.data.storage["id"];
        this.email = this.data.storage["email"];
        this.profession = this.data.storage["profession"];
        this.location = this.data.storage["location"];
        this.gender = this.data.storage["gender"];
        this.avatar = "http://188.166.127.207:8000/uploads/avatars/" + this.data.storage["avatar"];
        this.birthDate = this.data.storage["dob"];
        this.hobby = this.data.storage["hobby"];
        this.editing = false;
        this.newData = {
            "first": this.firstName,
            "last": this.lastName,
            "gender": this.gender,
            "bdate": this.birthDate,
            "location": this.location,
            "hobby": this.hobby,
            "profession": this.profession
        };
        this.server = new Server_1.Server();
        this.checkAvatar();
    }
    ProfileComponent.prototype.checkAvatar = function () {
        if (this.data.storage["avatar"] == "default-avatar.png") {
            this.hasAvatar = false;
        }
        else {
            this.hasAvatar = true;
        }
    };
    ProfileComponent.prototype.editData = function () {
        this.editing = true;
    };
    ProfileComponent.prototype.cancel = function () {
        this.editing = false;
    };
    ProfileComponent.prototype.changePhoto = function () {
        var _this = this;
        if (this.data.storage["avatar"] == "default-avatar.png") {
            this.openGallery();
        }
        else {
            this.deletePhoto().then(function () {
                _this.openGallery();
            });
        }
        this.checkAvatar();
    };
    ProfileComponent.prototype.openGallery = function () {
        this.id = this.data.storage["id"];
        //console.log(this.getTimeStamp());
        //console.log("Id " + this.id);
        var context = imagepicker.create({
            mode: "single"
        });
        this.startSelecting(context);
    };
    ProfileComponent.prototype.startSelecting = function (context) {
        var _that = this;
        console.log("in Gallery constructor");
        context
            .authorize()
            .then(function () {
            //_that.items = [];
            return context.present();
        })
            .then(function (selection) {
            selection.forEach(function (selected) {
                console.log("----------------");
                console.log("uri: " + selected.uri);
                console.log("fileUri: " + selected.fileUri);
                _that.uploadPhoto(selected.fileUri).then(function () {
                    _that.hasAvatar = true;
                });
                //this is not file name - must relog to see the changes
            });
            _that.item = selection;
            _that._changeDetectionRef.detectChanges();
        }).catch(function (e) {
            console.log(e);
        });
    };
    ProfileComponent.prototype.uploadPhoto = function (fileUri) {
        var _this = this;
        return new Promise(function (resolve, reject) {
            _this.server.uploadProfilPhoto(fileUri, _this.data.storage["id"]).then(function (fileName) {
                _this.data.storage["avatar"] = fileName;
                _this.avatar = "http://188.166.127.207:8000/uploads/avatars/" + _this.data.storage["avatar"];
            });
            resolve();
        });
    };
    ProfileComponent.prototype.deletePhoto = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("Deleting photo " + _this.data.storage["id"] + _this.data.storage["avatar"]);
            _this.server.deletePhoto(_this.data.storage["id"], _this.data.storage["avatar"], "avatar", 0);
            _this.data.storage["avatar"] = "default-avatar.png";
            _this.avatar = "http://188.166.127.207:8000/uploads/avatars/" + "default-avatar.png";
            _this.hasAvatar = false;
            resolve();
        });
    };
    ProfileComponent.prototype.saveData = function () {
        console.log(this.firstName);
        console.log(this.lastName);
        if (this.newData.first && this.newData.last) {
            console.log("OK");
            console.log(this.newData.first + " " + this.newData.last);
            this.firstName = this.newData.first;
            this.lastName = this.newData.last;
            this.gender = this.newData.gender;
            this.birthDate = this.newData.bdate;
            this.location = this.newData.location;
            this.hobby = this.newData.hobby;
            this.profession = this.newData.profession;
            this.server.saveDetails(this.data.storage["id"], this.newData.first, this.newData.last, this.newData.gender, this.newData.birthDate, this.newData.location, this.newData.hobby, this.newData.profession);
            this.editing = false;
        }
        else {
            alert("Fields first and last name can't be empty");
        }
    };
    ProfileComponent = __decorate([
        core_1.Component({
            selector: "profile-tab",
            templateUrl: "./pages/tabs/profile/profile.tab.html",
            styleUrls: ["./pages/tabs/profile/profile-tab.css"]
        }),
        __metadata("design:paramtypes", [router_1.Router, Data_1.Data, core_1.ChangeDetectorRef])
    ], ProfileComponent);
    return ProfileComponent;
}());
exports.ProfileComponent = ProfileComponent;
//# sourceMappingURL=data:application/json;base64,