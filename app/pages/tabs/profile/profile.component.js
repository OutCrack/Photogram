"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var Data_1 = require("../../../shared/Data");
var Server_1 = require("../../../shared/Server/Server");
var imagepicker = require("nativescript-imagepicker");
var http = require("http");
var layout = require("ui/layouts/grid-layout");
var firebase = require("nativescript-plugin-firebase");
var ProfileComponent = /** @class */ (function () {
    function ProfileComponent(router, data, _changeDetectionRef) {
        this.router = router;
        this.data = data;
        this._changeDetectionRef = _changeDetectionRef;
        this.site = "http://188.166.127.207:5555/api.php/";
        this.firstName = this.data.storage["firstName"];
        this.lastName = this.data.storage["lastName"];
        this.id = this.data.storage["id"];
        this.email = this.data.storage["email"];
        this.profession = this.data.storage["profession"];
        this.location = this.data.storage["location"];
        this.gender = this.data.storage["gender"];
        this.avatar = "http://188.166.127.207:8000/uploads/avatars/" + this.data.storage["avatar"];
        this.birthDate = this.data.storage["dob"];
        this.hobby = this.data.storage["hobby"];
        this.editing = false;
        this.newData = {
            "first": this.firstName,
            "last": this.lastName,
            "gender": this.gender,
            "bdate": this.birthDate,
            "location": this.location,
            "hobby": this.hobby,
            "profession": this.profession
        };
        this.server = new Server_1.Server();
        this.checkAvatar();
    }
    ProfileComponent.prototype.checkAvatar = function () {
        if (this.data.storage["avatar"] == "default-avatar.png") {
            this.hasAvatar = false;
        }
        else {
            this.hasAvatar = true;
        }
    };
    ProfileComponent.prototype.editData = function () {
        this.editing = true;
    };
    ProfileComponent.prototype.cancel = function () {
        this.editing = false;
    };
    ProfileComponent.prototype.changePhoto = function () {
        var _this = this;
        if (this.data.storage["avatar"] == "default-avatar.png") {
            this.openGallery();
        }
        else {
            this.deletePhoto().then(function () {
                _this.openGallery();
            });
        }
        this.checkAvatar();
    };
    ProfileComponent.prototype.openGallery = function () {
        this.id = this.data.storage["id"];
        //console.log(this.getTimeStamp());
        //console.log("Id " + this.id);
        var context = imagepicker.create({
            mode: "single"
        });
        this.startSelecting(context);
    };
    ProfileComponent.prototype.startSelecting = function (context) {
        var _that = this;
        console.log("in Gallery constructor");
        context
            .authorize()
            .then(function () {
            //_that.items = [];
            return context.present();
        })
            .then(function (selection) {
            selection.forEach(function (selected) {
                console.log("----------------");
                console.log("uri: " + selected.uri);
                console.log("fileUri: " + selected.fileUri);
                _that.uploadPhoto(selected.fileUri);
                //this is not file name - must relog to see the changes
                _that.data.storage["avatar"] = "img" + selected.fileUri + ".jpg";
                _that.avatar = "http://188.166.127.207:8000/uploads/avatars/" + _that.data.storage["avatar"];
            });
            _that.item = selection;
            _that._changeDetectionRef.detectChanges();
        }).catch(function (e) {
            console.log(e);
        });
    };
    ProfileComponent.prototype.uploadPhoto = function (fileUri) {
        this.server.uploadProfilPhoto(fileUri, this.data.storage["id"]);
        this.hasAvatar = true;
    };
    ProfileComponent.prototype.deletePhoto = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            console.log("Deleting photo " + _this.data.storage["id"] + _this.data.storage["avatar"]);
            _this.server.deleteProfilePhoto(_this.data.storage["id"], _this.data.storage["avatar"]);
            _this.data.storage["avatar"] = "default-avatar.png";
            _this.avatar = "http://188.166.127.207:8000/uploads/avatars/" + "default-avatar.png";
            _this.hasAvatar = false;
            resolve();
        });
    };
    ProfileComponent.prototype.saveData = function () {
        console.log(this.firstName);
        console.log(this.lastName);
        if (this.newData.first && this.newData.last) {
            console.log("OK");
            console.log(this.newData.first + " " + this.newData.last);
            this.firstName = this.newData.first;
            this.lastName = this.newData.last;
            this.gender = this.newData.gender;
            this.birthDate = this.newData.bdate;
            this.location = this.newData.location;
            this.hobby = this.newData.hobby;
            this.profession = this.newData.profession;
            this.server.saveDetails(this.data.storage["id"], this.newData.first, this.newData.last, this.newData.gender, this.newData.birthDate, this.newData.location, this.newData.hobby, this.newData.profession);
            this.editing = false;
        }
        else {
            alert("Fields first and last name can't be empty");
        }
    };
    //logs out from both Google+ and Facebook accounts
    ProfileComponent.prototype.logout = function () {
        var router = this.router;
        this.data.storage = {};
        firebase.logout();
        router.navigate([""]);
    };
    ProfileComponent = __decorate([
        core_1.Component({
            selector: "profile-tab",
            templateUrl: "./pages/tabs/profile/profile.tab.html",
            styleUrls: ["./pages/tabs/profile/profile-tab.css"]
        }),
        __metadata("design:paramtypes", [router_1.Router, Data_1.Data, core_1.ChangeDetectorRef])
    ], ProfileComponent);
    return ProfileComponent;
}());
exports.ProfileComponent = ProfileComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwcm9maWxlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNDQUE2RDtBQUU3RCwwQ0FBeUQ7QUFHekQsNkNBQTRDO0FBRTVDLHdEQUF1RDtBQUN2RCxzREFBd0Q7QUFDeEQsSUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzNCLElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0FBQy9DLElBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0FBUXpEO0lBMEJJLDBCQUFvQixNQUFjLEVBQVUsSUFBVSxFQUFVLG1CQUFzQztRQUFsRixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUFVLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBbUI7UUFYdEcsU0FBSSxHQUFXLHNDQUFzQyxDQUFDO1FBWWxELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDaEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzlDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLE1BQU0sR0FBRyw4Q0FBOEMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzRixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRztZQUNYLE9BQU8sRUFBRyxJQUFJLENBQUMsU0FBUztZQUN4QixNQUFNLEVBQUcsSUFBSSxDQUFDLFFBQVE7WUFDdEIsUUFBUSxFQUFHLElBQUksQ0FBQyxNQUFNO1lBQ3RCLE9BQU8sRUFBRyxJQUFJLENBQUMsU0FBUztZQUN4QixVQUFVLEVBQUcsSUFBSSxDQUFDLFFBQVE7WUFDMUIsT0FBTyxFQUFHLElBQUksQ0FBQyxLQUFLO1lBQ3BCLFlBQVksRUFBRyxJQUFJLENBQUMsVUFBVTtTQUNqQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLGVBQU0sRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN2QixDQUFDO0lBRUQsc0NBQVcsR0FBWDtRQUNJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLG9CQUFvQixDQUFDLENBQUMsQ0FBQztZQUN0RCxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUMzQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUMxQixDQUFDO0lBQ0wsQ0FBQztJQUVELG1DQUFRLEdBQVI7UUFDSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUN4QixDQUFDO0lBQ0QsaUNBQU0sR0FBTjtRQUNJLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxzQ0FBVyxHQUFYO1FBQUEsaUJBU0M7UUFSRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7WUFDdEQsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxJQUFJLENBQUM7Z0JBQ3BCLEtBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFDRCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQztJQUVELHNDQUFXLEdBQVg7UUFDSSxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xDLG1DQUFtQztRQUNuQywrQkFBK0I7UUFDL0IsSUFBSSxPQUFPLEdBQUcsV0FBVyxDQUFDLE1BQU0sQ0FBQztZQUM3QixJQUFJLEVBQUUsUUFBUTtTQUNqQixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFTyx5Q0FBYyxHQUF0QixVQUF1QixPQUFPO1FBQzFCLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQztRQUNqQixPQUFPLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFDdEMsT0FBTzthQUNGLFNBQVMsRUFBRTthQUNYLElBQUksQ0FBQztZQUNGLG1CQUFtQjtZQUNuQixNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzdCLENBQUMsQ0FBQzthQUNELElBQUksQ0FBQyxVQUFDLFNBQVM7WUFDWixTQUFTLENBQUMsT0FBTyxDQUFDLFVBQVMsUUFBUTtnQkFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2dCQUNoQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDNUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ3BDLHVEQUF1RDtnQkFDdkQsS0FBSyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsS0FBSyxHQUFHLFFBQVEsQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO2dCQUNqRSxLQUFLLENBQUMsTUFBTSxHQUFHLDhDQUE4QyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2pHLENBQUMsQ0FDSixDQUFDO1lBQ0UsS0FBSyxDQUFDLElBQUksR0FBRyxTQUFTLENBQUM7WUFDdkIsS0FBSyxDQUFDLG1CQUFtQixDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzlDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFTLENBQUM7WUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25CLENBQUMsQ0FBQyxDQUFBO0lBQ1YsQ0FBQztJQUVELHNDQUFXLEdBQVgsVUFBWSxPQUFlO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7SUFDMUIsQ0FBQztJQUVELHNDQUFXLEdBQVg7UUFBQSxpQkFTQztRQVJHLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQy9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUN2RixLQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLEtBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7WUFDckYsS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsb0JBQW9CLENBQUM7WUFDbkQsS0FBSSxDQUFDLE1BQU0sR0FBRyw4Q0FBOEMsR0FBRyxvQkFBb0IsQ0FBQztZQUNwRixLQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztZQUN2QixPQUFPLEVBQUUsQ0FBQztRQUNkLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELG1DQUFRLEdBQVI7UUFDSSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMzQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7WUFDMUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFELElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7WUFDcEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztZQUNsQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1lBQ2xDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7WUFDcEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQztZQUN0QyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1lBQ2hDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7WUFDMUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQzNHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDNUYsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDekIsQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osS0FBSyxDQUFDLDJDQUEyQyxDQUFDLENBQUM7UUFDdkQsQ0FBQztJQUNMLENBQUM7SUFDRCxrREFBa0Q7SUFDbEQsaUNBQU0sR0FBTjtRQUNJLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNsQixNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBNUpRLGdCQUFnQjtRQU41QixnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLGFBQWE7WUFDdkIsV0FBVyxFQUFFLHVDQUF1QztZQUNwRCxTQUFTLEVBQUUsQ0FBQyxzQ0FBc0MsQ0FBQztTQUN0RCxDQUFDO3lDQTRCOEIsZUFBTSxFQUFnQixXQUFJLEVBQStCLHdCQUFpQjtPQTFCN0YsZ0JBQWdCLENBOEo1QjtJQUFELHVCQUFDO0NBQUEsQUE5SkQsSUE4SkM7QUE5SlksNENBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3RvclJlZiB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBQaG90byB9IGZyb20gXCIuLi8uLi8uLi9zaGFyZWQvUGhvdG9cIjtcbmltcG9ydCB7IFJvdXRlciwgQWN0aXZhdGVkUm91dGUgfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XG5pbXBvcnQgeyBUYWJDb21wb25lbnQgfSBmcm9tIFwiLi4vdGFiLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgVXNlciB9IGZyb20gXCIuLi8uLi8uLi9zaGFyZWQvVXNlclwiO1xuaW1wb3J0IHsgRGF0YSB9IGZyb20gXCIuLi8uLi8uLi9zaGFyZWQvRGF0YVwiO1xuaW1wb3J0IHsgR2VzdHVyZUV2ZW50RGF0YSB9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2dlc3R1cmVzL2dlc3R1cmVzXCI7XG5pbXBvcnQgeyBTZXJ2ZXIgfSBmcm9tIFwiLi4vLi4vLi4vc2hhcmVkL1NlcnZlci9TZXJ2ZXJcIjtcbmltcG9ydCAqIGFzIGltYWdlcGlja2VyIGZyb20gXCJuYXRpdmVzY3JpcHQtaW1hZ2VwaWNrZXJcIjtcbnZhciBodHRwID0gcmVxdWlyZShcImh0dHBcIik7XG52YXIgbGF5b3V0ID0gcmVxdWlyZShcInVpL2xheW91dHMvZ3JpZC1sYXlvdXRcIik7XG5jb25zdCBmaXJlYmFzZSA9IHJlcXVpcmUoXCJuYXRpdmVzY3JpcHQtcGx1Z2luLWZpcmViYXNlXCIpO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJwcm9maWxlLXRhYlwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vcGFnZXMvdGFicy9wcm9maWxlL3Byb2ZpbGUudGFiLmh0bWxcIixcbiAgICBzdHlsZVVybHM6IFtcIi4vcGFnZXMvdGFicy9wcm9maWxlL3Byb2ZpbGUtdGFiLmNzc1wiXVxufSlcblxuZXhwb3J0IGNsYXNzIFByb2ZpbGVDb21wb25lbnQge1xuXG4gICAgcHVibGljIGZpcnN0TmFtZTogc3RyaW5nO1xuICAgIHB1YmxpYyBsYXN0TmFtZTogc3RyaW5nO1xuICAgIHB1YmxpYyBlbWFpbDogc3RyaW5nO1xuICAgIHB1YmxpYyBwcm9mZXNzaW9uOiBzdHJpbmc7XG4gICAgcHVibGljIGxvY2F0aW9uOiBzdHJpbmc7XG4gICAgcHVibGljIGhvYmJ5OiBzdHJpbmc7XG4gICAgcHVibGljIGF2YXRhcjogc3RyaW5nO1xuICAgIHB1YmxpYyBiaXJ0aERhdGU6IHN0cmluZztcbiAgICBwdWJsaWMgZ2VuZGVyOiBzdHJpbmc7XG4gICAgcHVibGljIGlkOiBhbnk7XG4gICAgcHVibGljIHByb2ZpbGU6IGJvb2xlYW47XG4gICAgcHVibGljIHBob3RvczogYm9vbGVhbjtcbiAgICBwdWJsaWMgc2VsZWN0ZWRQaG90bzogc3RyaW5nO1xuICAgIHNpdGU6IHN0cmluZyA9IFwiaHR0cDovLzE4OC4xNjYuMTI3LjIwNzo1NTU1L2FwaS5waHAvXCI7XG4gICAgcHVibGljIG15UGhvdG9zOiBBcnJheTxQaG90bz47XG4gICAgcHVibGljIHBob3RvVXJsOiBzdHJpbmc7XG4gICAgcHVibGljIHBob3RvQ3JlYXRlZDogc3RyaW5nO1xuICAgIHB1YmxpYyBlZGl0aW5nOiBib29sZWFuO1xuICAgIHB1YmxpYyBuZXdEYXRhOiBhbnk7XG4gICAgcHVibGljIHNlcnZlcjogU2VydmVyO1xuICAgIHB1YmxpYyBpdGVtOiBhbnk7XG4gICAgcHVibGljIGhhc0F2YXRhcjogYm9vbGVhbjtcbiAgICBcblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgcm91dGVyOiBSb3V0ZXIsIHByaXZhdGUgZGF0YTogRGF0YSwgcHJpdmF0ZSBfY2hhbmdlRGV0ZWN0aW9uUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgICAgICB0aGlzLmZpcnN0TmFtZSA9IHRoaXMuZGF0YS5zdG9yYWdlW1wiZmlyc3ROYW1lXCJdO1xuICAgICAgICB0aGlzLmxhc3ROYW1lID0gdGhpcy5kYXRhLnN0b3JhZ2VbXCJsYXN0TmFtZVwiXTtcbiAgICAgICAgdGhpcy5pZCA9IHRoaXMuZGF0YS5zdG9yYWdlW1wiaWRcIl07XG4gICAgICAgIHRoaXMuZW1haWwgPSB0aGlzLmRhdGEuc3RvcmFnZVtcImVtYWlsXCJdO1xuICAgICAgICB0aGlzLnByb2Zlc3Npb24gPSB0aGlzLmRhdGEuc3RvcmFnZVtcInByb2Zlc3Npb25cIl07XG4gICAgICAgIHRoaXMubG9jYXRpb24gPSB0aGlzLmRhdGEuc3RvcmFnZVtcImxvY2F0aW9uXCJdO1xuICAgICAgICB0aGlzLmdlbmRlciA9IHRoaXMuZGF0YS5zdG9yYWdlW1wiZ2VuZGVyXCJdO1xuICAgICAgICB0aGlzLmF2YXRhciA9IFwiaHR0cDovLzE4OC4xNjYuMTI3LjIwNzo4MDAwL3VwbG9hZHMvYXZhdGFycy9cIiArIHRoaXMuZGF0YS5zdG9yYWdlW1wiYXZhdGFyXCJdO1xuICAgICAgICB0aGlzLmJpcnRoRGF0ZSA9IHRoaXMuZGF0YS5zdG9yYWdlW1wiZG9iXCJdO1xuICAgICAgICB0aGlzLmhvYmJ5ID0gdGhpcy5kYXRhLnN0b3JhZ2VbXCJob2JieVwiXTtcbiAgICAgICAgdGhpcy5lZGl0aW5nID0gZmFsc2U7XG4gICAgICAgIHRoaXMubmV3RGF0YSA9IHtcbiAgICAgICAgICAgIFwiZmlyc3RcIiA6IHRoaXMuZmlyc3ROYW1lLFxuICAgICAgICAgICAgXCJsYXN0XCIgOiB0aGlzLmxhc3ROYW1lLFxuICAgICAgICAgICAgXCJnZW5kZXJcIiA6IHRoaXMuZ2VuZGVyLFxuICAgICAgICAgICAgXCJiZGF0ZVwiIDogdGhpcy5iaXJ0aERhdGUsXG4gICAgICAgICAgICBcImxvY2F0aW9uXCIgOiB0aGlzLmxvY2F0aW9uLFxuICAgICAgICAgICAgXCJob2JieVwiIDogdGhpcy5ob2JieSxcbiAgICAgICAgICAgIFwicHJvZmVzc2lvblwiIDogdGhpcy5wcm9mZXNzaW9uXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2VydmVyID0gbmV3IFNlcnZlcigpO1xuICAgICAgICB0aGlzLmNoZWNrQXZhdGFyKCk7XG4gICAgfVxuXG4gICAgY2hlY2tBdmF0YXIoKSB7XG4gICAgICAgIGlmICh0aGlzLmRhdGEuc3RvcmFnZVtcImF2YXRhclwiXSA9PSBcImRlZmF1bHQtYXZhdGFyLnBuZ1wiKSB7XG4gICAgICAgICAgICB0aGlzLmhhc0F2YXRhciA9IGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5oYXNBdmF0YXIgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZWRpdERhdGEoKSB7XG4gICAgICAgIHRoaXMuZWRpdGluZyA9IHRydWU7XG4gICAgfVxuICAgIGNhbmNlbCgpIHsgXG4gICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlO1xuICAgIH1cblxuICAgIGNoYW5nZVBob3RvKCkge1xuICAgICAgICBpZiAodGhpcy5kYXRhLnN0b3JhZ2VbXCJhdmF0YXJcIl0gPT0gXCJkZWZhdWx0LWF2YXRhci5wbmdcIikge1xuICAgICAgICAgICAgdGhpcy5vcGVuR2FsbGVyeSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5kZWxldGVQaG90bygpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMub3BlbkdhbGxlcnkoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2hlY2tBdmF0YXIoKTtcbiAgICB9XG5cbiAgICBvcGVuR2FsbGVyeSgpIHtcbiAgICAgICAgdGhpcy5pZCA9IHRoaXMuZGF0YS5zdG9yYWdlW1wiaWRcIl07XG4gICAgICAgIC8vY29uc29sZS5sb2codGhpcy5nZXRUaW1lU3RhbXAoKSk7XG4gICAgICAgIC8vY29uc29sZS5sb2coXCJJZCBcIiArIHRoaXMuaWQpO1xuICAgICAgICBsZXQgY29udGV4dCA9IGltYWdlcGlja2VyLmNyZWF0ZSh7XG4gICAgICAgICAgICBtb2RlOiBcInNpbmdsZVwiIFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zdGFydFNlbGVjdGluZyhjb250ZXh0KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXJ0U2VsZWN0aW5nKGNvbnRleHQpIHtcbiAgICAgICAgbGV0IF90aGF0ID0gdGhpcztcbiAgICAgICAgY29uc29sZS5sb2coXCJpbiBHYWxsZXJ5IGNvbnN0cnVjdG9yXCIpO1xuICAgICAgICBjb250ZXh0XG4gICAgICAgICAgICAuYXV0aG9yaXplKCkgXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAvL190aGF0Lml0ZW1zID0gW107XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQucHJlc2VudCgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKChzZWxlY3Rpb24pID0+IHtcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb24uZm9yRWFjaChmdW5jdGlvbihzZWxlY3RlZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS1cIik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidXJpOiBcIiArIHNlbGVjdGVkLnVyaSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZmlsZVVyaTogXCIgKyBzZWxlY3RlZC5maWxlVXJpKTtcbiAgICAgICAgICAgICAgICAgICAgX3RoYXQudXBsb2FkUGhvdG8oc2VsZWN0ZWQuZmlsZVVyaSk7XG4gICAgICAgICAgICAgICAgICAgIC8vdGhpcyBpcyBub3QgZmlsZSBuYW1lIC0gbXVzdCByZWxvZyB0byBzZWUgdGhlIGNoYW5nZXNcbiAgICAgICAgICAgICAgICAgICAgX3RoYXQuZGF0YS5zdG9yYWdlW1wiYXZhdGFyXCJdID0gXCJpbWdcIiArIHNlbGVjdGVkLmZpbGVVcmkgKyBcIi5qcGdcIjtcbiAgICAgICAgICAgICAgICAgICAgX3RoYXQuYXZhdGFyID0gXCJodHRwOi8vMTg4LjE2Ni4xMjcuMjA3OjgwMDAvdXBsb2Fkcy9hdmF0YXJzL1wiICsgX3RoYXQuZGF0YS5zdG9yYWdlW1wiYXZhdGFyXCJdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7IFxuICAgICAgICAgICAgICAgIF90aGF0Lml0ZW0gPSBzZWxlY3Rpb247XG4gICAgICAgICAgICAgICAgX3RoYXQuX2NoYW5nZURldGVjdGlvblJlZi5kZXRlY3RDaGFuZ2VzKCk7IFxuICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICAgICAgfSlcbiAgICB9XG5cbiAgICB1cGxvYWRQaG90byhmaWxlVXJpOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5zZXJ2ZXIudXBsb2FkUHJvZmlsUGhvdG8oZmlsZVVyaSwgdGhpcy5kYXRhLnN0b3JhZ2VbXCJpZFwiXSk7XG4gICAgICAgIHRoaXMuaGFzQXZhdGFyID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBkZWxldGVQaG90bygpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiRGVsZXRpbmcgcGhvdG8gXCIgKyB0aGlzLmRhdGEuc3RvcmFnZVtcImlkXCJdICsgdGhpcy5kYXRhLnN0b3JhZ2VbXCJhdmF0YXJcIl0pO1xuICAgICAgICAgICAgdGhpcy5zZXJ2ZXIuZGVsZXRlUHJvZmlsZVBob3RvKHRoaXMuZGF0YS5zdG9yYWdlW1wiaWRcIl0sIHRoaXMuZGF0YS5zdG9yYWdlW1wiYXZhdGFyXCJdKTtcbiAgICAgICAgICAgIHRoaXMuZGF0YS5zdG9yYWdlW1wiYXZhdGFyXCJdID0gXCJkZWZhdWx0LWF2YXRhci5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuYXZhdGFyID0gXCJodHRwOi8vMTg4LjE2Ni4xMjcuMjA3OjgwMDAvdXBsb2Fkcy9hdmF0YXJzL1wiICsgXCJkZWZhdWx0LWF2YXRhci5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuaGFzQXZhdGFyID0gZmFsc2U7XG4gICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICBzYXZlRGF0YSgpIHtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5maXJzdE5hbWUpO1xuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmxhc3ROYW1lKTtcbiAgICAgICAgaWYgKHRoaXMubmV3RGF0YS5maXJzdCAmJiB0aGlzLm5ld0RhdGEubGFzdCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJPS1wiKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMubmV3RGF0YS5maXJzdCArIFwiIFwiICsgdGhpcy5uZXdEYXRhLmxhc3QpO1xuICAgICAgICAgICAgdGhpcy5maXJzdE5hbWUgPSB0aGlzLm5ld0RhdGEuZmlyc3Q7XG4gICAgICAgICAgICB0aGlzLmxhc3ROYW1lID0gdGhpcy5uZXdEYXRhLmxhc3Q7XG4gICAgICAgICAgICB0aGlzLmdlbmRlciA9IHRoaXMubmV3RGF0YS5nZW5kZXI7XG4gICAgICAgICAgICB0aGlzLmJpcnRoRGF0ZSA9IHRoaXMubmV3RGF0YS5iZGF0ZTtcbiAgICAgICAgICAgIHRoaXMubG9jYXRpb24gPSB0aGlzLm5ld0RhdGEubG9jYXRpb247XG4gICAgICAgICAgICB0aGlzLmhvYmJ5ID0gdGhpcy5uZXdEYXRhLmhvYmJ5O1xuICAgICAgICAgICAgdGhpcy5wcm9mZXNzaW9uID0gdGhpcy5uZXdEYXRhLnByb2Zlc3Npb247XG4gICAgICAgICAgICB0aGlzLnNlcnZlci5zYXZlRGV0YWlscyh0aGlzLmRhdGEuc3RvcmFnZVtcImlkXCJdLCB0aGlzLm5ld0RhdGEuZmlyc3QsIHRoaXMubmV3RGF0YS5sYXN0LCB0aGlzLm5ld0RhdGEuZ2VuZGVyLFxuICAgICAgICAgICAgdGhpcy5uZXdEYXRhLmJpcnRoRGF0ZSwgdGhpcy5uZXdEYXRhLmxvY2F0aW9uLCB0aGlzLm5ld0RhdGEuaG9iYnksIHRoaXMubmV3RGF0YS5wcm9mZXNzaW9uKTtcbiAgICAgICAgICAgIHRoaXMuZWRpdGluZyA9IGZhbHNlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYWxlcnQoXCJGaWVsZHMgZmlyc3QgYW5kIGxhc3QgbmFtZSBjYW4ndCBiZSBlbXB0eVwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvL2xvZ3Mgb3V0IGZyb20gYm90aCBHb29nbGUrIGFuZCBGYWNlYm9vayBhY2NvdW50c1xuICAgIGxvZ291dCgpIHtcbiAgICAgICAgdmFyIHJvdXRlciA9IHRoaXMucm91dGVyO1xuICAgICAgICB0aGlzLmRhdGEuc3RvcmFnZSA9IHt9O1xuICAgICAgICBmaXJlYmFzZS5sb2dvdXQoKTtcbiAgICAgICAgcm91dGVyLm5hdmlnYXRlKFtcIlwiXSk7XG4gICAgfVxuXG59Il19